# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install asio
      run: brew install asio

    - name: Install cppcheck
      run: brew install cppcheck

    - name: Install cpplint
      run: brew install cpplint
        # pip3 install cpplint

    - name: Install lcov
      run: brew install lcov

    - name: Install tcl-tk
      run: brew install tcl-tk

    - name: Install Wordnet
      working-directory: ${{github.workspace}}/external_libraries
      run: |
        brew install wget
        wget http://wordnetcode.princeton.edu/3.0/WordNet-3.0.tar.gz
        tar -xzf WordNet-3.0.tar.gz && rm WordNet-3.0.tar.gz
        cd WordNet-3.0
        ./configure --with-tcl=/opt/homebrew/Cellar/tcl-tk/8.6.15/lib --with-tk=/opt/homebrew/Cellar/tcl-tk/8.6.15/lib
        sudo cp ../stubs.c src/stubs.c
        sed -i '' '132s/.*/int main(int argc,char *argv[])/' src/wn.c
        sudo make
        sudo make install

    # workflow can find OpenSSL 3.3.2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      working-directory: ${{github.workspace}}/build
      run: cmake ..

    - name: Build
      # Build your program with the given configuration
      working-directory: ${{github.workspace}}/build
      run: make

    # - name: Test
    #   working-directory: ${{github.workspace}}/build
    #   # Execute tests defined by the CMake configuration.
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ./

